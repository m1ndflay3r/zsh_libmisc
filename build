#!/usr/bin/env zsh

## fetch user input
BUILDOP="$@[1]"

## cleanup old builds
if ls -a *.zwc &> /dev/null; then
  rm -rf ./*.zwc &> /dev/null
fi
if ls -a libmisc &> /dev/null; then
  rm -rf libmisc*
fi

## print dummies for extra modules
func_print_dummy() {
  print '#!/usr/bin/env zsh' > zsh/comp/"$func_print_dummy_name"
  print -n "$func_print_dummy_name" >> zsh/comp/"$func_print_dummy_name"
  print '() {' >> zsh/comp/"$func_print_dummy_name"
  print -n '  print "Error: libmisc compiled without ' >> zsh/comp/"$func_print_dummy_name"
  print -n "$func_print_dummy_name" >> zsh/comp/"$func_print_dummy_name"
  print '"' >> zsh/comp/"$func_print_dummy_name"
  print -n '  print " To use the included ' >> zsh/comp/"$func_print_dummy_name"
  print -n "$func_print_dummy_name" >> zsh/comp/"$func_print_dummy_name"
  print -n " module, recompile libmisc with zlibmisc_incl_extra=" >> zsh/comp/"$func_print_dummy_name"
  print -n "$func_print_dummy_name" >> zsh/comp/"$func_print_dummy_name"
  print ' ./build (--static || --dynamic)"' >> zsh/comp/"$func_print_dummy_name"
  print '  return 1' >> zsh/comp/"$func_print_dummy_name"
  print '}' >> zsh/comp/"$func_print_dummy_name"
}

extra_module_list_array=('busybox'
                         'fetchpackagelist')

for func_print_dummy_name in $=extra_module_list_array; do
  func_print_dummy
done

## include extra module functions go here
#busybox
func_incl_busybox() {
  cat zsh/extra/busybox > zsh/comp/busybox
  echo "autoload busybox" >> zsh/comp/libmiscinit
}

#fetchpackagelist

func_incl_fetchpackagelist() {
  cat zsh/extra/fetchpackagelist > zsh/comp/fetchpackagelist
  echo "autoload fetchpackagelist" >> zsh/comp/libmiscinit
}

## as per name, handler for extra module inclusion in builds
extra_module_handle() {
  IFS=$' '
  for zlibmisc_extra_opts in $=zlibmisc_incl_extra; do
    case $zlibmisc_extra_opts in
      (busybox) func_incl_busybox ;;
      (fetchpackagelist) func_incl_fetchpackagelist ;;
      (*) echo "extra module $zlibmisc_extra_opts does not exist"
    esac
  done
  unset IFS
}

## backs up and restores libmiscinit; ensuring it doesn't get scrambled by rebuilds
libmiscinit_backup_handle() {
  if ! ls -a zsh/.libmiscinit.bak &> /dev/null; then
    cat zsh/comp/libmiscinit > zsh/.libmiscinit.bak
  else
    cat zsh/.libmiscinit.bak > zsh/comp/libmiscinit
  fi
}

## compilation
# dynamic compile
if [ -z "$BUILDOP" ] || [ "$BUILDOP" = --dynamic ]; then
  libmiscinit_backup_handle
  if [ ! -z "$zlibmisc_incl_extra" ]; then
    extra_module_handle
  fi
  print '}' >> zsh/comp/libmiscinit
  zcompile -MU libmisc zsh/comp/*
# static compile
elif [ "$BUILDOP" = --static ]; then
  libmiscinit_backup_handle
  if [ ! -z "$zlibmisc_incl_extra" ]; then
    extra_module_handle
  fi
  echo -n > libmisc
  echo '#!/usr/bin/env zsh' >> libmisc
  print '}' >> zsh/comp/libmiscinit
  cat zsh/comp/* >> libmisc
  zcompile -RU libmisc
fi
