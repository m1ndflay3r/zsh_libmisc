#!/usr/bin/env zsh
hexdlf() {
  #load modules
  autoload isfile
  autoload fox
  autoload fox-fr
  autoload getstrln
  autoload nrandom
  autoload zmkfifo
  zmodload zsh/files
  #fail printout
  hexdlf_fail() {
    print "Usage: hexdlf <string>"
    print "       hexdlf /path/to/file"
    print "       print -n <string> | hexdlf"
    print "       print -n 'file:/path/to/file' | hexdlf"
  }
  #fetch user input
  TARGGY="$@"
  [ -z "$TARGGY" ] && {
    ([ -z "$zHEXDLFWAITINDEF" ] || [ "$zHEXDLFWAITINDEF" = 0 ]) && {
      while IFS= noglob read -r -k5 -t3 -d '' -u0 HEXDLFINREAD5; do
        TARGGY="$HEXDLFINREAD5"
        break
      done
    } || {
      while IFS= noglob read -r -k5 -d '' -u0 HEXDLFINREAD5; do
        TARGGY="$HEXDLFINREAD5"
        break
      done
    }
    [ -z "$TARGGY" ] && {
      hexdlf_fail
      return 1
    } || [ "$TARGGY" = 'file:' ] && {
      TARGGY="$(fox)"
      isfile "$TARGGY" && {
        fox-fr "$TARGGY" | hexdlf
        return $?
      } || {
        hexdlf_fail
        return 1
      }
    }
  } || isfile "$TARGGY" && {
    fox-fr "$TARGGY" | hexdlf
    return $?
  }
  #fifo setup
  HEXDLFFIFO="xx"$(nrandom)"xx" &> /dev/null
  HEXDLFFIFO2="xx"$(nrandom)"xx" &> /dev/null
  [ -d "/tmp" ] && {
    HEXDLFDIR="/tmp/.libmisc"$UID""
  } || {
    HEXDLFDIR=""$HOME"/.libmisc"
  }
  ! isfile "$HEXDLFDIR" && {
    mkdir "$HEXDLFDIR"
  }
  zmkfifo "$HEXDLFDIR/$HEXDLFFIFO"
  zmkfifo "$HEXDLFDIR/$HEXDLFFIFO2"
  fox > "$HEXDLFDIR/$HEXDLFFIFO2" &|
  (IFS= noglob print -rn "$TARGGY" && fox-fr "$HEXDLFDIR/$HEXDLFFIFO2") > "$HEXDLFDIR/$HEXDLFFIFO" &|
  #perform hexdump, store output to variable
  set +o MULTIBYTE
  HEXDLF_BASE() {
    while IFS= noglob read -r -k1 -d '' -u0 HEXDLFWORKING; do
      printf "%02x" "'$HEXDLFWORKING"
    done < <(fox-fr "$HEXDLFDIR/$HEXDLFFIFO")
  }
  hexdlf_cleaner() {
    rm -rf "$HEXDLFDIR/$HEXDLFFIFO" &> /dev/null
    rm -rf "$HEXDLFDIR/$HEXDLFFIFO2" &> /dev/null
  }
  #if no opt flags set (except for zHEX36D), print hexdump as-is
  [ "$zHEXXD" = 0 ] && {
    unset zHEXXD
  }
  [ "$zHEXDSH" = 0 ] && {
    unset zHEXDSH
  }
  ([ -z "$zHEXXD" ] && [ -z "$zHEXDSH" ]) && {
    HEXDLF_BASE
    HEXDLFRET=$?
    hexdlf_cleaner
    return $HEXDLFRET
  #if flag zHEXXD is set, format hexdump to mimic `xxd -p`
  } || [ -z "$zHEXDSH" ] && {
    unset HEXDLF_BASE1
    while IFS= noglob read -r -k60 -d '' -u0 HEXDLF_BASE1; do
      IFS= noglob print -nr "$HEXDLF_BASE1"
      print
    done < <(HEXDLF_BASE)
    [ ! -z "$HEXDLF_BASE1" ] && {
      IFS= noglob print -nr "$HEXDLF_BASE1"
      print
      unset HEXDLF_BASE1
    }
    unset zHEXXD
    hexdlf_cleaner
    return 0
  #if flag zHEXDSH is set, print hexdump in shell format `\x00\x00...`
  } || {
    unset HEXDLF_BASE1
    while IFS= noglob read -r -k2 -d '' -u0 HEXDLF_BASE1; do
      print -rn '\x'
      IFS= noglob print -rn "$HEXDLF_BASE1"
    done < <(HEXDLF_BASE)
    [ ! -z "$HEXDLF_BASE1" ] && {
      print -rn '\x'
      IFS= noglob print -rn "$HEXDLF_BASE1"
      unset HEXDLF_BASE1
    }
    unset zHEXDLFSH
    hexdlf_cleaner
    return 0
  }
}
