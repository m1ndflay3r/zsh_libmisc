#!/usr/bin/env zsh
hexd() {
  #load modules
  autoload isfile
  autoload fox
  autoload fox-fr
  autoload getstrln
  #fail printout
  hexd_fail() {
    print "Usage: hexd <string>"
    print "       hexd /path/to/file"
    print "       print -n <string> | hexd"
    print "       print -n 'file:/path/to/file' | hexd"
  }
  #fetch user input
  TARGGY="$@"
  [ -z "$TARGGY" ] && {
    ([ -z "$zHEXDWAITINDEF" ] || [ "$zHEXDWAITINDEF" = 0 ]) && {
      export zFOXT=33
    } || {
      unset zFOXT
      unset zHEXDWAITINDEF
    }
    TARGGY="$(fox)"
    unset zFOXT
    TARGGYTEST="${TARGGY: :5}"
    [ "$TARGGYTEST" = "error" ] && {
      hexd_fail
      return 1
    } || [ "$TARGGYTEST" = 'file:' ] && {
      TARGGY="${TARGGY:5}"
      isfile "$TARGGY" && {
        TARGGY="$(fox-fr "$TARGGY")"
      } || {
        hexd_fail
        return 1
      }
    }
  } || isfile "$TARGGY" && {
    TARGGY="$(fox-fr "$TARGGY")"
  }
  #perform hexdump, store output to variable
  set +o MULTIBYTE
  HEXD_BASE() {
    while IFS= noglob read -r -k1 -d '' -u0 HEXDWORKING; do
      printf "%02x" "'$HEXDWORKING"
    done < <(noglob printf '%s' "$TARGGY")
  }
  #if no opt flags set (except for zHEX36D), print hexdump as-is
  [ "$zHEXXD" = 0 ] && {
    unset zHEXXD
  }
  [ "$zHEXDSH" = 0 ] && {
    unset zHEXDSH
  }
  ([ -z "$zHEXXD" ] && [ -z "$zHEXDSH" ]) && {
    HEXD_BASE
    return 0
  #if flag zHEXXD is set, format hexdump to mimic `xxd -p`
  } || [ -z "$zHEXDSH" ] && {
    unset HEXD_BASE1
    while IFS= noglob read -r -k60 -d '' -u0 HEXD_BASE1; do
      IFS= noglob print -nr "$HEXD_BASE1"
      print
    done < <(HEXD_BASE)
    [ ! -z "$HEXD_BASE1" ] && {
      IFS= noglob print -nr "$HEXD_BASE1"
      print
      unset HEXD_BASE1
    }
    unset zHEXXD
    return 0
  #if flag zHEXDSH is set, print hexdump in shell format `\x00\x00...`
  } || {
    unset HEXD_BASE1
    while IFS= noglob read -r -k2 -d '' -u0 HEXD_BASE1; do
      print -rn '\x'
      IFS= noglob print -rn "$HEXD_BASE1"
    done < <(HEXD_BASE)
    [ ! -z "$HEXD_BASE1" ] && {
      print -rn '\x'
      IFS= noglob print -rn "$HEXD_BASE1"
      unset HEXD_BASE1
    }
    unset zHEXDSH
    return 0
  }
}
