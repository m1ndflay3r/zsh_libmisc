#!/usr/bin/env zsh

zls() {

  ## load modules
  autoload ctext
  autoload ztput

  ## env setup
  [ ! -z "$zls_nnl" ] && \
    zls_ctext_op="nnl" || \
    zls_ctext_op="std"

  ## fetch dir contents
  zls_fetchdir() {
    #print to represent current dir
    print '.'
    #print to represent previous dir if current dir is not /
    [ "$(pwd)" != '/' ] && \
      print '..'
    #print all hidden files in current dir
    (
    for zfetchdir in .*; do
      print "$zfetchdir"
    done
    ) 2>/dev/null || true
    #print all non-hidden files in current dir
    (
    for zfetchdir in *; do
      print "$zfetchdir"
    done
    ) 2>/dev/null || true
  }

  ## test archive by extension
  zls_isarchive() {
    #input collection
    zls_isarchive_input="$1"
    #known archive type array
    zls_archive_types=('.tar'
                        '.xz'
                        '.7z'
                       '.bz2'
                      '.cpio'
                       '.arj'
                       '.lha'
                     '.lrzip'
                       '.lz4'
                      '.lzip'
                      '.lzop'
                       '.rar'
                       '.zip'
                      '.zstd'
                       '.zst'
                        '.gz')
    #set ret to 1 by default
    zls_isarchive_ret=1
    #iterate over known archive extensions for match on tail of input; set ret to 0 if found
    for zls_test_ar in $=zls_archive_types; do
      [[ "$zls_isarchive_input" = *"$zls_test_ar" ]] && \
        zls_isarchive_ret=0 && \
        break
    done
    #return
    return $zls_isarchive_ret
  }

  ## main loop
  zls_main() {
    #colourize dir contents by type; print colourized contents
    IFS=$'\n'
    for zls_fetchd in $(zls_fetchdir); do
      ([ -h "$zls_fetchd" ] && ztput bold && ctext cyan $zls_ctext_op " "$zls_fetchd" ") || \
      ([ -b "$zls_fetchd" ] && ztput bold && ctext yellow $zls_ctext_op " "$zls_fetchd" ") || \
      ([ -S "$zls_fetchd" ] && ztput bold && ctext magenta $zls_ctext_op " "$zls_fetchd" ") || \
      ([ -c "$zls_fetchd" ] && ctext magenta $zls_ctext_op " "$zls_fetchd" ") || \
      ([ -p "$zls_fetchd" ] && ctext yellow $zls_ctext_op " "$zls_fetchd" ") || \
      ([ -d "$zls_fetchd" ] && ztput bold && ctext blue $zls_ctext_op " "$zls_fetchd" ") || \
      ([ -x "$zls_fetchd" ] && ztput bold && ctext green $zls_ctext_op " "$zls_fetchd" ") || \
      (zls_isarchive "$zls_fetchd" && ctext red $zls_ctext_op " "$zls_fetchd" ") || \
      ([ -f "$zls_fetchd" ] && ctext white $zls_ctext_op " "$zls_fetchd" ") || \
      true
    done
    unset IFS
  }

  ## input handling
  zls_preserve_dir=$(pwd)
  zls_cd_success=0
  [ ! -z "$1" ] && \
    cd "$1" && \
    zls_cd_success=1

  [ ! -z "$1" ] && \
  [ "$zls_cd_success" = 0 ] && \
    return 1

  ## exec main function
  zls_main

  ## preserve working dir
  cd $zls_preserve_dir
  unset zls_preserve_dir

  ## trailing newline
  [ "$zls_ctext_op" = "nnl" ] && \
    print || \
    return 0
}
