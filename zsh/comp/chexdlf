#!/usr/bin/env zsh
chexdlf() {
  #load modules
  autoload fox
  autoload nrandom
  autoload fox-fr
  autoload zmkfifo
  autoload zrm
  #fail printout
  chexdlf_fail() {
    print "Usage - hexdlf /path/to/file | chexdlf"
  }
  #fetch user input
  if [ -z "$zCHEXDLFWAITINDEF" ] || [ "$zCHEXDLFWAITINDEF" = 0 ]; then
    while IFS= noglob read -k5 -t3 -d '' -u0 CHEXDLFINTMP; do
      CHEXDLFIN="$CHEXDLFINTMP"
      break
    done
  else
    while IFS= noglob read -k5 -d '' -u0 CHEXDLFINTMP; do
      CHEXDLFIN="$CHEXDLFINTMP"
      break
    done
  fi
  if [ -z "$CHEXDLFIN" ]; then
    chexdlf_fail
    return 1
  fi
  #fifo setup
  CHEXDFIFO1="Ch"$(nrandom)"lF" &> /dev/null
  CHEXDFIFO2="Ch"$(nrandom)"lF" &> /dev/null
  if [ -d "/tmp" ]; then
    CHEXDLFDIR='/tmp'
  else
    CHEXDLFDIR=$HOME
  fi
  zmkfifo "$CHEXDLFDIR/$CHEXDFIFO1"
  zmkfifo "$CHEXDLFDIR/$CHEXDFIFO2"
  fox > "$CHEXDLFDIR/$CHEXDFIFO2" &|
  (IFS= noglob print -rn "$CHEXDLFIN" && fox-fr "$CHEXDLFDIR/$CHEXDFIFO2") > "$CHEXDLFDIR/$CHEXDFIFO1" &|
  #create zero vars
  unset ZERO4096
  ZERO4096COUNT=0
  until [ "$ZERO4096COUNT" -eq 4096 ]; do
    if [ -z "$ZERO4096" ]; then
      ZERO4096="0"
    else
      ZERO4096=""$ZERO4096"0"
    fi
    ZERO4096COUNT=$((ZERO4096COUNT+1))
  done
  ZERO3172=${ZERO4096: :3172}
  ZERO2048=${ZERO4096: :2048}
  ZERO1024=${ZERO2048: :1024}
  ZERO512=${ZERO1024: :512}
  ZERO256=${ZERO512: :256}
  ZERO128=${ZERO256: :128}
  ZERO64=${ZERO128: :64}
  ZERO60=${ZERO64: :60}
  ZERO32=${ZERO64: :32}
  ZERO16=${ZERO32: :16}
  ZERO8=${ZERO16: :8}
  ZERO6=${ZERO8: :6}
  ZERO4=${ZERO6: :4}
  ZERO2=${ZERO4: :2}
  # swap zeros for symbolic representations
  CHEXDLFOUTPARSE() {
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO4096"/'@'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO3172"/';'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO2048"/'#'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO1024"/'$'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO512"/'_'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO256"/'&'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO128"/'!'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO64"/'?'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO60"/':'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO32"/'<'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO16"/'>'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO8"/')'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO6"/'('}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO4"/'{'}
    CHEXDLFOUT=${CHEXDLFOUT//"$ZERO2"/'}'}
    # print modified dump
    noglob printf '%s' "$CHEXDLFOUT"
  }
  # read input 40960 bytes at a time
  while IFS= noglob read -r -k40960 -d '' -u0 CHEXDLFOUT; do
    CHEXDLFOUTPARSE
  done < <(fox-fr "$CHEXDLFDIR/$CHEXDFIFO1")
  if [ ! -z "$CHEXDLFOUT" ]; then
    CHEXDLFOUTPARSE
  fi
  zrm "$CHEXDLFDIR/$CHEXDFIFO1" &> /dev/null
  zrm "$CHEXDLFDIR/$CHEXDFIFO2" &> /dev/null
  return 0
}
