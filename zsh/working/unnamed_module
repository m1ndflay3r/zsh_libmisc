#!/usr/bin/env zsh
unnamed_module() {
  # load modules
  autoload fox-fr
  autoload zmkfifo
  autoload zrm
  autoload zmkdir
  autoload zrmdir
  autoload nrandom
  # continuous read from output FIFO
  zkreen() {
    zkreen_terminate=0
    zkreen_target="$@[1]"
    while true; do
      fox-fr $zkreen_target
      sleep 0.1
      if [ $zkreen_terminate = 1 ]; then
        break
      fi
    done
  }
  # write $zomgdelwrite to FIFO & unset, if not empty
  zdelomgwriter() {
    zdelomgprompt_target="$@[1]"
    zomgdel=0
    unset zomgdelwrite
    while true; do
      if [ ! -z "$zomgdelwrite" ]; then
        printf "%s""$zomgdelwrite" > "$zdelomgprompt_target"
        unset zomgdelwrite
      fi
      if [ $zomgdel != 0 ]; then
        break
      fi
    done
  }
  # Command execution daemon
  zlmexec() {
    zlmexec_target="$@[1]"
    zlmexec_output="$@[2]"
    zlmexec_term=0
    while true; do
      (
      zsh <<EOF
$(fox-fr $zlmexec_target)
EOF
      ) &> "$zlmexec_output"
      if [ $zlmexec_term != 0 ]; then
        break
      fi
    done
  }
  # Setup I/O
  zomgdel_io() {
    if [ "$zomgdel_verbose" = 1 ]; then
      print "Setup working directory..."
    fi
    # working dir setup
    if [ -d "/tmp" ]; then
      zdelomg_io='/tmp'
    else
      zdelomg_io=$HOME
    fi
    if [ ! -d ""$zdelomg_io"/zdelomg" ]; then
      zmkdir ""$zdelomg_io"/zdelomg"
    fi
    # create FIFOs
    if [ "$zomgdel_verbose" = 1 ]; then
      print "Create I/O FIFOs..."
    fi
    omgdel_fifo="omgdel_input_"$(nrandom)"" &> /dev/null
    delomg_fifo="omgdel_output_"$(nrandom)"" &> /dev/null
    zmkfifo ""$zdelomg_io"/zdelomg/"$omgdel_fifo""
    zmkfifo ""$zdelomg_io"/zdelomg/"$delomg_fifo""
    # start daemons
    if [ "$zomgdel_verbose" = 1 ]; then
      print "Starting daemons..."
    fi
    zdelomgwriter ""$zdelomg_io"/zdelomg/"$omgdel_fifo"" &
    zkreen ""$zdelomg_io"/zdelomg/"$delomg_fifo"" &
    zlm_exec ""$zdelomg_io"/zdelomg/"$omgdel_fifo"" ""$zdelomg_io"/zdelomg/"$delomg_fifo""
    if [ "$zomgdel_verbose" = 1 ]; then
      print "I/O running"
    fi
  }
  # Prompt handler (login shell)
  zlmprompt() {
    zlmprompt_terminate=0
    while true; do
      if [ "$zlmprompt_terminate" != 0 ]; then
        break
      fi
    done
  }
  # Oneshot handler (single command escallation)
  zomgdel_oneshot() {
    
  }
  # Cleanup steps
  zomgdel_cleanup() {
    
  }
  # User input handler
}
